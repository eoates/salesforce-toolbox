<aura:documentation>
	<aura:description>
		<!-- description -->
		<p>
			The <code>c:spinnerPanel</code> component is used to display a spinner overlay on a
			block of content. This is useful when loading or saving data to the server. For example,
			you can place your form inside of a <code>c:spinnerPanel</code> component and when the
			user submits the form you can set the <code>showSpinner</code> attribute to
			<code>true</code> to indicate that the data is being saved. Just make sure to set
			<code>showSpinner</code> back to <code>false</code> to hide the spinner.
		</p>
		<!-- /description -->

		<!-- example -->
		<h4>Usage Example</h4>

		<p>
			This example will demonstrate basic usage of the <code>c:spinnerPanel</code> component.
		</p>

		<h5>Component Markup</h5>
<pre><![CDATA[<!-- CreateContact.cmp -->
<aura:component controller="ContactController">
  <aura:attribute name="firstName" type="String" />
  <aura:attribute name="lastName" type="String" />
  <aura:attribute name="saving" type="Boolean"
    default="false" />

  <c:apex aura:id="apex" />

  <c:spinnerPanel showSpinner="{!v.saving}">
    <ui:inputText label="First Name" value="{!v.firstName}" />
    <ui:inputText label="Last Name" value="{!v.lastName}" />
    <button onclick="{!c.saveButtonClick}">Save</button>
  </c:spinnerPanel>
</aura:component>
]]></pre>

		<h5>Component Controller</h5>
<pre><![CDATA[// CreateContactController.js
({
  saveButtonClick: function(component, event, helper) {
    // The spinnerPanel component's showSpinner attribute is bound to our
    // saving attribute. Set saving to true to begin showing the spinner
    component.set('v.saving', true);

    // Get input
    var firstName = component.get('v.firstName');
    var lastName = component.get('v.lastName');

    // Send data to server
    var apex = component.find('apex').getModule();
    apex.execute(component, 'createContact', {
      params: {
        firstName: firstName,
        lastName: lastName
      },
      success: function(result, state) {
        // Make sure to set saving back to false to hide the spinner
        component.set('v.saving', false);
        console.log('Contact created', result);
      },
      failure: function(error, state) {
        // Make sure to set saving back to false to hide the spinner
        component.set('v.saving', false);
        console.error('Failed to create contact', error);
      }
    });
  }
})
]]></pre>

		<h5>Apex Class</h5>
<pre><![CDATA[// ContactController.cls
public class ContactController {
  // Creates a new contact and returns its ID
  @AuraEnabled
  public static String createContact(String firstName, String lastName) {
    Contact c = new Contact();
    c.FirstName = firstName;
    c.LastName = lastName;
    insert c;

    return c.Id;
  }
}
]]></pre>
		<!-- /example -->
	</aura:description>
</aura:documentation>