<!--
****************************************************************************************************
* inputSelect.cmp
****************************************************************************************************
* This is a shared component. Do not make modifications to this component without carefully
* considering the impact this may have on existing applications/components/pages/etc. that use this
* component.
*
* @author   Eugene Oates
* @date     2018-03-20
* @version  1.0.0
*
****************************************************************************************************
-->
<aura:component access="GLOBAL" implements="c:inputBase"
                description="Allows the user to select a value from a list of options.">
	<!-- attributes -->
	<aura:attribute access="GLOBAL" name="containerClass" type="String"
	                description="Optional CSS style applied to the select container (slds-select_container)." />

	<aura:attribute access="GLOBAL" name="value" type="String"
	                description="The value of the component." />

	<aura:attribute access="GLOBAL" name="options" type="Object[]"
	                description="The list of available options." />

	<aura:attribute access="GLOBAL" name="selectedIndex" type="Integer" default="-1"
	                description="The zero-based index of the selected option or -1 if no option is selected." />

	<aura:attribute access="GLOBAL" name="placeholder" type="String"
	                description="Text that is displayed when the field is empty, to prompt the user for a valid entry." />

	<aura:attribute access="GLOBAL" name="maxlength" type="Integer"
	                description="The maximum number of characters allowed in the field when editable is true and type is text." />

	<aura:attribute access="GLOBAL" name="editable" type="Boolean" default="false"
	                description="Controls whether the user is allowed to enter a value that is not in the list of options." />

	<aura:attribute access="GLOBAL" name="autotrim" type="Boolean" default="true"
	                description="Controls whether leading and trailing white space is automatically trimmed." />

	<aura:attribute access="GLOBAL" name="type" type="String" default="text"
	                description="If editable is true then this attribute determines the type of data the user is allowed to enter. Accepted values are text or number." />

	<aura:attribute access="GLOBAL" name="min" type="Decimal"
	                description="The minimum value accepted by the component when editable is true and type is number." />

	<aura:attribute access="GLOBAL" name="max" type="Decimal"
	                description="The maximum value accepted by the component when editable is true and type is number." />

	<aura:attribute access="GLOBAL" name="precision" type="Integer"
	                description="The total number of digits allowed (not including the decimal point) when editable is true and type is number." />

	<aura:attribute access="GLOBAL" name="scale" type="Integer"
	                description="The number of digits allowed to the right of the decimal point when editable is true and type is number. Set this to 0 to allow only integer values." />

	<aura:attribute access="GLOBAL" name="nillable" type="Boolean" default="true"
	                description="Controls whether the component accepts blank/nill values when editable is true and type is number. If false then the value will be automatically set to 0 if the user leaves the field blank."/>
	<!-- /attributes -->

	<!-- events -->
	<aura:registerEvent access="GLOBAL" name="onfocus" type="c:genericComponentEvent"
	                    description="Fired when the component receives focus." />

	<aura:registerEvent access="GLOBAL" name="onblur" type="c:genericComponentEvent"
	                    description="Fired when the component loses focus." />

	<aura:registerEvent access="GLOBAL" name="onchange" type="c:genericComponentEvent"
	                    description="Fired when the value changes." />
	<!-- /events -->

	<!-- handlers -->
	<aura:handler value="{!this}" name="init" action="{!c.init}" />
	<aura:handler value="{!v.value}" name="change" action="{!c.valueChange}" />
	<aura:handler value="{!v.options}" name="change" action="{!c.optionsChange}" />
	<aura:handler value="{!v.selectedIndex}" name="change" action="{!c.selectedIndexChange}" />
	<aura:handler value="{!v.editable}" name="change" action="{!c.editableChange}" />
	<!-- /handlers -->

	<!-- methods -->
	<aura:method access="GLOBAL" name="focus" action="{!c.focus}"
	             description="Sets focus to the component." />

	<aura:method access="GLOBAL" name="select" action="{!c.select}"
	             description="Selects all text in the component. This method does nothing if editable is false." />
	<!-- /methods -->

	<!-- component -->
	<c:utils aura:id="utils" />

	<c:inputNumberBehavior aura:id="numberInputBehavior"
	                       min="{!v.min}"
	                       max="{!v.max}"
	                       precision="{!v.precision}"
	                       scale="{!v.scale}"
	                       nillable="{!v.nillable}"
	                       disabled="{!v.disabled}" />

	<c:formElement class="{!v.elementClass}"
	               labelClass="{!v.labelClass}"
	               controlClass="{!v.controlClass}"
	               errorClass="{!v.errorClass}"
	               controlId="{#globalId + '_input'}"
	               label="{!v.label}"
	               required="{!v.required}"
	               error="{!v.error}"
	               errors="{!v.errors}">
		<div aura:id="container"
		     class="{!v.containerClass + if(v.editable, ' is-editable', '') + ' slds-select_container'}"
		     onfocusin="{!c.containerFocusIn}"
		     onfocusout="{!c.containerFocusOut}">
			<aura:if isTrue="{!v.editable}">
				<!-- editable -->
				<input aura:id="input"
				       id="{#globalId + '_input'}"
				       name="{!v.name}"
				       type="text"
				       accesskey="{!v.accesskey}"
				       placeholder="{!v.placeholder}"
				       title="{!v.title}"
				       maxlength="{!if(v.type ne 'number', v.maxlength, undefined)}"
				       tabindex="{!v.tabindex}"
				       disabled="{!if(v.disabled, 'disabled', '')}"
				       onblur="{!c.inputBlur}"
				       onkeydown="{!c.inputKeyDown}"
				       onkeypress="{!c.inputKeyPress}"
				       oninput="{!c.inputInput}"
				       onchange="{!c.inputChange}" />

				<select aura:id="editableSelect"
				        id="{#globalId + '_editableSelect'}"
				        class="{!v.class + ' slds-select'}"
				        tabindex="-1"
				        disabled="{!if(v.disabled, 'disabled', '')}"
				        onchange="{!c.selectChange}">
				</select>
				<!-- /editable -->

				<aura:set attribute="else">
					<!-- non-editable -->
					<span class="{!if(v.selectedIndex eq -1, 'faux-option', 'slds-hide')}">{!if(empty(v.value), v.placeholder, v.value)}</span>

					<select aura:id="select"
					        id="{#globalId + '_input'}"
					        name="{!v.name}"
					        class="{!v.class + ' slds-select'}"
					        accesskey="{!v.accesskey}"
					        title="{!v.title}"
					        tabindex="{!v.tabindex}"
					        disabled="{!if(v.disabled, 'disabled', '')}"
					        onfocus="{!c.selectFocus}"
					        onblur="{!c.selectBlur}"
					        onchange="{!c.selectChange}">
					</select>
					<!-- /non-editable -->
				</aura:set>
			</aura:if>
		</div>
	</c:formElement>
	<!-- /component -->
</aura:component>