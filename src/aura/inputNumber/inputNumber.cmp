<!--
****************************************************************************************************
* inputNumber.cmp
****************************************************************************************************
* This is a shared component. Do not make modifications to this component without carefully
* considering the impact this may have on existing applications/components/pages/etc. that use this
* component.
*
* @author   Eugene Oates
* @date     2018-03-20
* @version  1.0.0
*
****************************************************************************************************
-->
<aura:component access="GLOBAL" implements="c:inputBase"
                description="Allows the user to enter a numeric value.">
	<!-- attributes -->
	<aura:attribute access="GLOBAL" name="value" type="Decimal"
	                description="The value of the component." />

	<aura:attribute access="GLOBAL" name="placeholder" type="String"
	                description="Text that is displayed when the field is empty, to prompt the user for a valid entry." />

	<aura:attribute access="GLOBAL" name="min" type="Decimal"
	                description="The minimum value accepted by the component." />

	<aura:attribute access="GLOBAL" name="max" type="Decimal"
	                description="The maximum value accepted by the component." />

	<aura:attribute access="GLOBAL" name="step" type="Decimal"
	                description="The amount by which the value is incremented/decremented when the user presses the up and down arrows on the keyboard." />

	<aura:attribute access="GLOBAL" name="precision" type="Integer"
	                description="The total number of digits allowed (not including the decimal point)." />

	<aura:attribute access="GLOBAL" name="scale" type="Integer"
	                description="The number of digits allowed to the right of the decimal point. Set this to 0 to allow only integer values." />

	<aura:attribute access="GLOBAL" name="nillable" type="Boolean" default="true"
	                description="Controls whether the component accepts blank/nill values. If false then the value will be automatically set to 0 if the user leaves the field blank." />

	<aura:attribute access="GLOBAL" name="left" type="Aura.Component[]"
	                description="Content displayed to the left of the input element." />

	<aura:attribute access="GLOBAL" name="right" type="Aura.Component[]"
	                description="Content displayed to the right of the input element." />
	<!-- /attributes -->

	<!-- events -->
	<aura:registerEvent access="GLOBAL" name="onfocus" type="c:genericComponentEvent"
	                    description="Fired when the component receives focus." />

	<aura:registerEvent access="GLOBAL" name="onblur" type="c:genericComponentEvent"
	                    description="Fired when the component loses focus." />

	<aura:registerEvent access="GLOBAL" name="onchange" type="c:genericComponentEvent"
	                    description="Fired when the value changes." />
	<!-- /events -->

	<!-- handlers -->
	<aura:handler value="{!this}" name="init" action="{!c.init}" />
	<aura:handler value="{!v.value}" name="change" action="{!c.valueChange}" />
	<!-- /handlers -->

	<!-- methods -->
	<aura:method access="GLOBAL" name="focus" action="{!c.focus}"
	             description="Sets focus to the component." />

	<aura:method access="GLOBAL" name="select" action="{!c.select}"
	             description="Selects all text in the component." />
	<!-- /methods -->

	<!-- component -->
	<c:utils aura:id="utils" />
	<c:inputNumberBehavior aura:id="behavior"
	                       min="{!v.min}"
	                       max="{!v.max}"
	                       step="{!v.step}"
	                       precision="{!v.precision}"
	                       scale="{!v.scale}"
	                       nillable="{!v.nillable}"
	                       disabled="{!v.disabled}"
	                       readonly="{!v.readonly}" />

	<c:formElement class="{!v.elementClass}"
	               labelClass="{!v.labelClass}"
	               controlClass="{!v.controlClass}"
	               errorClass="{!v.errorClass}"
	               controlId="{#globalId + '_input'}"
	               label="{!v.label}"
	               required="{!v.required}"
	               error="{!v.error}"
	               errors="{!v.errors}">
		{!v.left}

		<input aura:id="input"
		       id="{#globalId + '_input'}"
		       name="{!v.name}"
		       class="{!v.class + ' slds-input'}"
		       type="{#if($Browser.formFactor eq 'DESKTOP', 'text', 'number')}"
		       accesskey="{!v.accesskey}"
		       placeholder="{!v.placeholder}"
		       title="{!v.title}"
		       tabindex="{!v.tabindex}"
		       disabled="{!if(v.disabled, 'disabled', '')}"
		       readonly="{!if(and(not(v.disabled), v.readonly), 'readonly', '')}"
		       onfocus="{!c.inputFocus}"
		       onblur="{!c.inputBlur}"
		       onkeydown="{!c.inputKeyDown}"
		       oninput="{!c.inputInput}"
		       onchange="{!c.inputChange}" />

		{!v.right}
	</c:formElement>
	<!-- /component -->
</aura:component>